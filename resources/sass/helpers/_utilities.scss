/**
 * Utilites & classes
 */

.aligncenter {
  display: block;
  margin: 0 auto;
}

.alignleft {
  float: left;
  margin: 0 15px 20px 0;
}

.alignright {
  float: right;
  margin: 0 0 20px 15px;
}

.block {
  display: block;
}

.iblock {
  display: inline-block;
}

.hide {
  display: none;
}

/* Font Weights */
.text-bold {
  font-weight: $text-bold !important;
}

.text-medium {
  font-weight: $text-medium !important;
}

.text-normal {
  font-weight: $text-normal !important;
}

/* List Styles */
.no-bullet {
  list-style: none;
}

.bullet {
  list-style: disc;
}

.relative {
  position: relative;
}

.row--full {
  margin: 0;
}

.col--full {
  padding: 0;
}

%col {
  position: relative;
  min-height: 1px;
  float: left;
}

%flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Vertical align
%vertical-align {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

// Clearfix
%clearfix {
  *zoom: 1;
  &:before, &:after {
      content: " ";
      display: table;
  }
  &:after {
      clear: both;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0,0,0,0);
  border: 0;
}

// Visually hide an element
%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

// Overlay
// Use in a pseudo element
%overlay {
  content: "";
  display: block;
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
}

// Cover
// Makes videos or images work like background-size: cover;
// as long as the parent is relative and has overflow: hidden
%cover {
  position: absolute;
  top: 50%;
  left: 50%;
  min-width: 100%;
  min-height: 100%;
  transform: translate(-50%, -50%);
}

/**
 * Alignment styles
 * ----------------------------------------------------------------------------
 *
 * Utility classes for adjusting content alignment
 */

.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}
.vertical-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.vertical-center > * {
  flex: 0 0 auto;
}

/**
 * Spacing styles
 * ------------------------------------------------------------------------*/

figure, figure[class^=align-], h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6,
img, p, ul, time {
  &.push-top {
    margin-top: 6.25rem;
  }
  &.pull-top {
    margin-top: -12.5rem;
  }
}

.m-t-1 {
  margin-top: calc( #{$grid-gutter-width} / 2 ) !important;
}
.m-t-2 {
  margin-top: #{$grid-gutter-width} !important;
}
.m-t-3 {
  margin-top: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.m-b-1 {
  margin-bottom: calc( #{$grid-gutter-width} / 2 ) !important;
}
.m-b-2 {
  margin-bottom: #{$grid-gutter-width} !important;
}
.m-b-3 {
  margin-bottom: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.m-l-1 {
  margin-left: calc( #{$grid-gutter-width} / 2 ) !important;
}
.m-l-2 {
  margin-left: #{$grid-gutter-width} !important;
}
.m-l-3 {
  margin-left: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.m-r-1 {
  margin-right: calc( #{$grid-gutter-width} / 2 ) !important;
}
.m-r-2 {
  margin-right: #{$grid-gutter-width} !important;
}
.m-r-3 {
  margin-right: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.m-a-1 {
  margin: calc( #{$grid-gutter-width} / 2 ) !important;
}
.m-a-2 {
  margin: #{$grid-gutter-width} !important;
}
.m-a-3 {
  margin: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.m-x-1 {
  margin-left: calc( #{$grid-gutter-width} / 2 ) !important;
  margin-right: calc( #{$grid-gutter-width} / 2 ) !important;
}
.m-x-2 {
  margin-left: #{$grid-gutter-width} !important;
  margin-right: #{$grid-gutter-width} !important;
}
.m-x-3 {
  margin-left: calc( #{$grid-gutter-width} * 1.5 ) !important;
  margin-right: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.m-y-1 {
  margin-top: calc( #{$grid-gutter-width} / 2 ) !important;
  margin-bottom: calc( #{$grid-gutter-width} / 2 ) !important;
}
.m-y-2 {
  margin-top: #{$grid-gutter-width} !important;
  margin-bottom: #{$grid-gutter-width} !important;
}
.m-y-3 {
  margin-top: calc( #{$grid-gutter-width} * 1.5 ) !important;
  margin-bottom: calc( #{$grid-gutter-width} * 1.5 ) !important;
}

.p-t-1 {
  padding-top: calc( #{$grid-gutter-width} / 2 ) !important;
}
.p-t-2 {
  padding-top: #{$grid-gutter-width} !important;
}
.p-t-3 {
  padding-top: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.p-b-1 {
  padding-bottom: calc( #{$grid-gutter-width} / 2 ) !important;
}
.p-b-2 {
  padding-bottom: #{$grid-gutter-width} !important;
}
.p-b-3 {
  padding-bottom: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.p-l-1 {
  padding-left: calc( #{$grid-gutter-width} / 2 ) !important;
}
.p-l-2 {
  padding-left: #{$grid-gutter-width} !important;
}
.p-l-3 {
  padding-left: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.p-r-1 {
  padding-right: calc( #{$grid-gutter-width} / 2 ) !important;
}
.p-r-2 {
  padding-right: #{$grid-gutter-width} !important;
}
.p-r-3 {
  padding-right: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.p-a-1 {
  padding: calc( #{$grid-gutter-width} / 2 ) !important;
}
.p-a-2 {
  padding: #{$grid-gutter-width} !important;
}
.p-a-3 {
  padding: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.p-x-1 {
  padding-left: calc( #{$grid-gutter-width} / 2 ) !important;
  padding-right: calc( #{$grid-gutter-width} / 2 ) !important;
}
.p-x-2 {
  padding-left: #{$grid-gutter-width} !important;
  padding-right: #{$grid-gutter-width} !important;
}
.p-x-3 {
  padding-left: calc( #{$grid-gutter-width} * 1.5 ) !important;
  padding-right: calc( #{$grid-gutter-width} * 1.5 ) !important;
}
.p-y-1 {
  padding-top: calc( #{$grid-gutter-width} / 2 ) !important;
  padding-bottom: calc( #{$grid-gutter-width} / 2 ) !important;
}
.p-y-2 {
  padding-top: #{$grid-gutter-width} !important;
  padding-bottom: #{$grid-gutter-width} !important;
}
.p-y-3 {
  padding-top: calc( #{$grid-gutter-width} * 1.5 ) !important;
  padding-bottom: calc( #{$grid-gutter-width} * 1.5 ) !important;
}

/**
 * Image styles
 * ----------------------------------------------------------------------------
 *
 * Utility classes for adjusting image display
 */

.rounded {
  border-radius: 50%;
}

/**
 * Text styles
 * ----------------------------------------------------------------------------
 *
 * Utility classes for affecting text display
 */

.text-uppercase {
  text-transform: uppercase !important;
}

.text-large {
  font-size: 175% !important;
}
.text-small {
  font-size: 50% !important;
}

.text-left {
  text-align: left !important;
}
.text-center {
  text-align: center !important;
}
.text-right {
  text-align: right !important;
}

.text-muted {
  color: $text-gray !important;
}

//theme specific colors
article.dark,
aside.dark,
footer.dark,
header.dark,
header.top,
body.locked header,
body.locked header.top,
main.dark,
section.dark {
  background-color: $black;
  a:not(.button), h1, h2, h3, h4, h5, h6, p, label, dt, dd, li {
    color: $white;
  }
  a:not(.button)[href*="/"]:hover {
    color: $silver;
  }
}

a, p, dt, dd, span, time, address, ul {
  &.danger, &.danger li {
    color: $danger-color;
  }
  &.success, &.success li {
    color: $success-color;
  }
  &.steel, &.steel li {
    color: $steel;
  }
  &.red, &.red li {
    color: $red;
  }
  &.teal, &.teal li {
    color: $teal;
  }
  &.orange, &.orange li {
    color: $orange;
  }
  &.chartreuse, &.chartreuse li {
    color: $chartreuse;
  }
}

aside, article, main, div, header, footer, section, nav, menu, code, hr {
  &.danger {
    background-color: $danger-color;
  }
  &.success {
    background-color: $success-color;
  }
  &.steel {
    background-color: $steel;
  }
  &.red {
    background-color: $red;
  }
  &.teal {
    background-color: $teal;
  }
  &.orange {
    background-color: $orange;
  }
  &.chartreuse {
    background-color: $chartreuse;
  }
}